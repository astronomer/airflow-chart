airflow:
  # Airflow 3 API server settings
  apiServer:
    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp

  createUserJob:
    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp

  # Airflow scheduler settings
  scheduler:
    livenessProbe:
      timeoutSeconds: 30
    strategy:
      type: Recreate
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: component
                    operator: In
                    values:
                      - scheduler
              topologyKey: "kubernetes.io/hostname"
    logGroomerSidecar:
      args: ["/usr/local/bin/clean-airflow-logs"]

    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp
  securityContexts:
    containers:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL

  triggerer:
    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp

  migrateDatabaseJob:
    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp
  webserver:
    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp
  workers:
    persistence:
      enabled: true
    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp
  postgresql:
    image:
      registry: quay.io
      repository: astronomer/ap-postgresql
      tag: 17.5.0

  dagProcessor:
    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp

authSidecar:
  enabled: true
dagDeploy:
  enabled: true
gitSyncRelay:
  enabled: true
ingress:
  enabled: true
loggingSidecar:
  enabled: true
sccEnabled: true
