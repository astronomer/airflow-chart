airflow:
  migrateDatabaseJob:
    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp
  webserver:
    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp
  workers:
    persistence:
      enabled: true
    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp
  postgresql:
    image:
      registry: quay.io
      repository: astronomer/ap-postgresql
      tag: 17.5.0
  scheduler:
    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp
  apiServer:
    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp

  createUserJob:
    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp

  triggerer:
    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp

  dagProcessor:
    preAirflowExtraInitContainers:
      - command:
          - sh
          - -c
          - cp -rvx /usr/local/airflow/. /usr_local_airflow_copy/
        image: '{{ template "airflow_image" . }}'
        name: usr-local-airflow-copier
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - mountPath: /usr_local_airflow_copy
            name: usr-local-airflow
    extraVolumeMounts:
      - mountPath: /usr/local/airflow
        name: usr-local-airflow
      - mountPath: /tmp
        name: tmp
    extraVolumes:
      - emptyDir: {}
        name: usr-local-airflow
      - emptyDir: {}
        name: tmp

authSidecar:
  enabled: true
dagDeploy:
  enabled: true
gitSyncRelay:
  enabled: true
ingress:
  enabled: true
loggingSidecar:
  enabled: true
sccEnabled: true
