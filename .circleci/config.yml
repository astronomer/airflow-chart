version: 2.1

workflows:
  version: 2.1
  install-airflow-chart:
    jobs:
      - lint
      - build-artifact:
          requires:
          - lint
      - 'airflow-celery-on-k8s-1-14':
          requires:
          - build-artifact
      - 'airflow-celery-on-k8s-1-15':
          requires:
          - build-artifact
      - 'airflow-celery-on-k8s-1-16':
          requires:
          - build-artifact
      - 'airflow-celery-on-k8s-1-17':
          requires:
          - build-artifact
      - 'airflow-kubernetes-on-k8s-1-14':
          requires:
          - build-artifact
      - 'airflow-kubernetes-on-k8s-1-15':
          requires:
          - build-artifact
      - 'airflow-kubernetes-on-k8s-1-16':
          requires:
          - build-artifact
      - 'airflow-kubernetes-on-k8s-1-17':
          requires:
          - build-artifact
      - 'airflow-local-on-k8s-1-14':
          requires:
          - build-artifact
      - 'airflow-local-on-k8s-1-15':
          requires:
          - build-artifact
      - 'airflow-local-on-k8s-1-16':
          requires:
          - build-artifact
      - 'airflow-local-on-k8s-1-17':
          requires:
          - build-artifact

      - approve-release:
          type: approval
          requires:
            - 'airflow-celery-on-k8s-1-14'
            - 'airflow-celery-on-k8s-1-15'
            - 'airflow-celery-on-k8s-1-16'
            - 'airflow-celery-on-k8s-1-17'
            - 'airflow-kubernetes-on-k8s-1-14'
            - 'airflow-kubernetes-on-k8s-1-15'
            - 'airflow-kubernetes-on-k8s-1-16'
            - 'airflow-kubernetes-on-k8s-1-17'
            - 'airflow-local-on-k8s-1-14'
            - 'airflow-local-on-k8s-1-15'
            - 'airflow-local-on-k8s-1-16'
            - 'airflow-local-on-k8s-1-17'
          filters:
            branches:
              only:
                - '/release-.*/'
      - release:
          requires:
            - approve-release
          filters:
            branches:
              only:
                - '/release-.*/'
jobs:
  lint:
    docker:
      - image: alpine/helm:2.16.1
    steps:
      - checkout
      - run:
          name: Lint the Airflow chart
          command: bin/lint

  build-artifact:
    docker:
      - image: alpine/helm:2.16.1
    steps:
      - checkout
      - run:
          name: Package the Airflow chart
          command: bin/package
      - persist_to_workspace:
          root: /tmp/airflow-chart-package
          paths:
            - './*.tgz'

  airflow-local-on-k8s-1-14:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      KUBE_VERSION: 1.14.10
      EXECUTOR: "LocalExecutor"
    steps:
      - helm-install

  airflow-local-on-k8s-1-15:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      KUBE_VERSION: 1.15.7
      EXECUTOR: "LocalExecutor"
    steps:
      - helm-install

  airflow-local-on-k8s-1-16:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      KUBE_VERSION: 1.16.4
      EXECUTOR: "LocalExecutor"
    steps:
      - helm-install

  airflow-local-on-k8s-1-17:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      KUBE_VERSION: 1.17.0
      EXECUTOR: "LocalExecutor"
    steps:
      - helm-install

  airflow-kubernetes-on-k8s-1-14:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      KUBE_VERSION: 1.14.10
      EXECUTOR: "KubernetesExecutor"
    steps:
      - helm-install

  airflow-kubernetes-on-k8s-1-15:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      KUBE_VERSION: 1.15.7
      EXECUTOR: "KubernetesExecutor"
    steps:
      - helm-install

  airflow-kubernetes-on-k8s-1-16:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      KUBE_VERSION: 1.16.4
      EXECUTOR: "KubernetesExecutor"
    steps:
      - helm-install

  airflow-kubernetes-on-k8s-1-17:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      KUBE_VERSION: 1.17.0
      EXECUTOR: "KubernetesExecutor"
    steps:
      - helm-install

  airflow-celery-on-k8s-1-14:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      KUBE_VERSION: 1.14.10
      EXECUTOR: "CeleryExecutor"
    steps:
      - helm-install

  airflow-celery-on-k8s-1-15:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      KUBE_VERSION: 1.15.7
      EXECUTOR: "CeleryExecutor"
    steps:
      - helm-install

  airflow-celery-on-k8s-1-16:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      KUBE_VERSION: 1.16.4
      EXECUTOR: "CeleryExecutor"
    steps:
      - helm-install

  airflow-celery-on-k8s-1-17:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      KUBE_VERSION: 1.17.0
      EXECUTOR: "CeleryExecutor"
    steps:
      - helm-install

  release:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - publish-github-release
      - run:
          name: Release the Airflow chart
          command: |
            set -e
            pyenv global 2.7.12
            HELM_CHART_PATH='/tmp/workspace/airflow-*.tgz' bin/release

commands:
  helm-install:
    description: "Install Helm chart from artifact"
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Install Airflow chart
          command: |
            HELM_CHART_PATH='/tmp/workspace/airflow-*.tgz' bin/run-ci
  publish-github-release:
    description: "Create a release on GitHub"
    parameters:
      tag:
        type: string
        default:  "$NEXT_TAG"
    steps:
      - run:
          name: Create a release on GitHub
          command: |
            set -xe
            pyenv global 3.7.0
            pip install astronomer_e2e_test
            # We can remove --debug after we are happy with it
            astronomer-ci --debug publish-github-release --github-repository $CIRCLE_PROJECT_REPONAME --github-organization $CIRCLE_PROJECT_USERNAME --commitish $CIRCLE_SHA1
