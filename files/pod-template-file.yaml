---
# Are we using a local/sequential executor?
{{- $local := or (eq .Values.executor "LocalExecutor") (eq .Values.executor "SequentialExecutor") }}
# Are we using the kubernetes executor?
{{- $kube := eq .Values.executor "KubernetesExecutor" }}
# Is persistence enabled on the _workers_?
# This is important because in $local mode, the scheduler assumes the role of the worker
{{- $persistence := .Values.workers.persistence.enabled }}
# If we're using a StatefulSet
{{- $stateful := and $local $persistence }}
# If we're using elasticsearch logging
{{- $elasticsearch := .Values.elasticsearch.enabled }}

apiVersion: v1
kind: Pod
metadata:
  name: dummy-name
  labels:
    tier: airflow
    component: worker
    release: '{{ .Release.Name }}'
    platform: "{{ .Values.platform.release }}"
    workspace: "{{ .Values.platform.workspace }}"
spec:
  containers:
    - args: []
      name: "base"
      command: []
      env:
      - name: AIRFLOW__CORE__EXECUTOR
        value: LocalExecutor
{{- include "standard_airflow_environment" . | indent 4 }}
      envFrom: []
      image: {{ template "airflow_image" . }}
      imagePullPolicy: {{ .Values.images.airflow.pullPolicy }}
      name: base
      ports: []
      volumeMounts:
        - mountPath: {{ template "airflow_logs" . }}
          name: airflow-logs
  hostNetwork: false
  {{- if or .Values.registry.secretName .Values.registry.connection }}
  imagePullSecrets:
    - name: {{ template "registry_secret" . }}
  {{- end }}
  restartPolicy: Never
  securityContext:
  {{- if contains "alpine"  .Values.defaultAirflowTag }}
    runAsUser: 100
  {{- else }}
    runAsUser: 50000
  {{- end }}
  nodeSelector:
    {{ toYaml .Values.nodeSelector | indent 8 }}
  affinity:
    {{ toYaml .Values.affinity | indent 8 }}
  tolerations:
    {{ toYaml .Values.tolerations | indent 8 }}
  serviceAccountName: '{{ .Release.Name }}-worker-serviceaccount'
  volumes:
  - configMap:
      name: {{ include "airflow_config" . }}
    name: airflow-config
  - configMap:
      name: {{ include "airflow_config" . }}
    name: airflow-local-settings
{{- if not $stateful }}
  - name: airflow-logs
    emptyDir: {}
{{- else }}
  volumeClaimTemplates:
    - metadata:
      name: airflow-logs
    spec:
    {{- if .Values.workers.persistence.storageClassName }}
    storageClassName: {{ .Values.workers.persistence.storageClassName }}
    {{- end }}
    accessModes: ["ReadWriteOnce"]
    resources:
      requests:
        storage: {{ .Values.workers.persistence.size }}
{{- end }}
