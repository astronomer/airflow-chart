
{{- $purposes := list -}}
{{- if $.Values.ingress.perHostnameIngresses -}}
  {{- $purposes = list "primary" "compat" -}}
{{- else -}}
  {{- $purposes = list "combined" -}}
{{- end -}}

{{/* START AIRFLOW INGRESS SECTION */}}
{{- if .Values.ingress.enabled }}
  {{ $ctx := . }}

{{/* begin range iteration loop over purposes */}}
{{ range $purpose := $purposes -}}
{{/* begin ctx scope-inversion for purpose */}}
{{- with $ctx -}}
{{- $section_affix  := "" -}}
{{- if not ( eq $purpose "combined" ) }}
{{- $section_affix = printf " - %s" $purpose }}
{{- else -}}
{{- end -}}
################################
## Airflow Ingress{{ $section_affix}}
#################################
{{ $ingress_name := printf "%s-%s" $.Release.Name "airflow-ingress" }}
{{- if not (or (eq $purpose "combined") (eq $purpose "primary")) -}}
{{ $ingress_name = printf "%s-%s" $ingress_name $purpose  }}
{{- end}}

kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ $ingress_name }}
  labels:
    tier: airflow
    component: airflow-ingress
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
{{- with .Values.airflow.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
  {{- if .Values.ingress.webserverAnnotations }}
  annotations:
  {{- if .Values.authSidecar.enabled  }}
{{- toYaml .Values.authSidecar.annotations | nindent 4 }}
  {{- else }}
    {{- range $k, $v := .Values.ingress.webserverAnnotations }}
      {{ $k | quote }}: {{ tpl $v $ctx | toYaml | indent 4 }}
    {{- end }}
  {{- end }}
  {{- end }}
spec:
  tls:
  {{- if .Values.ingress.acme }}
    - secretName: {{ .Release.Name }}-airflow-tls
  {{- else if .Values.ingress.tlsSecretName }}
    - secretName: {{ .Values.ingress.tlsSecretName }}
  # this option to be relooked, for the sake of POC we have hardcoded
  {{- else if .Values.authSidecar.enabled  }}
    - secretName: astronomer-tls
  {{ else }}
    - secretName: ~
  {{- end }}
      hosts:
      {{- if or (eq $purpose "combined") (eq $purpose "primary") }}
        - {{- include "deployments_subdomain" . | indent 1 }}
      {{- end }}
      {{- if or (eq $purpose "combined") (eq $purpose "compat") }}
        - {{- include "airflow_subdomain" . | indent 1 }}
      {{- end }}

  rules:
  {{- if or (eq $purpose "combined") (eq $purpose "primary") }}
    - host: {{- include "deployments_subdomain" . | indent 1 }}
      http:
        paths:
          - path: /{{ .Release.Name }}/airflow
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-webserver
                port:
                  {{- if .Values.authSidecar.enabled  }}
                  name: auth-proxy
                  {{- else }}
                  name: airflow-ui
                  {{- end }}
  {{- end}}
  {{- if or (eq $purpose "combined") (eq $purpose "compat") }}
    - host: {{- include "airflow_subdomain" . | indent 1 }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-webserver
                port:
                  {{- if .Values.authSidecar.enabled  }}
                  name: auth-proxy
                  {{- else }}
                  name: airflow-ui
                  {{- end }}
  {{- end}}
{{/* end ctx scope-inversion for purpose */}}
{{ end }}
---
{{/* end range iteration loop over purposes */}}
{{ end }}
{{/* end check on if ingress is enabled */}}
{{- end }}
{{/* END AIRFLOW INGRESS SECTION */}}
{{/* START FLOWER INGRESS SECTION */}}
{{- if and .Values.ingress.enabled (eq .Values.airflow.executor "CeleryExecutor") }}
  {{ $ctx := . }}

{{/* begin range iteration loop over purposes */}}
{{ range $purpose := $purposes -}}
{{/* begin ctx scope-inversion for purpose */}}
{{- with $ctx -}}
{{- $section_affix  := "" -}}
{{- if not ( eq $purpose "combined" ) }}
{{- $section_affix = printf " - %s" $purpose }}
{{- else -}}
{{- end -}}
################################
## Flower Ingress{{ $section_affix}}
#################################
{{ $ingress_name := printf "%s-%s" $.Release.Name "flower-ingress" }}
{{- if not (or (eq $purpose "combined") (eq $purpose "primary")) -}}
{{ $ingress_name = printf "%s-%s" $ingress_name $purpose  }}
{{- end}}
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ $ingress_name }}
  labels:
    tier: airflow
    component: flower-ingress
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
{{- with .Values.airflow.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
  {{- if .Values.ingress.flowerAnnotations }}
  {{ $ctx := . }}
  annotations:
  {{- if .Values.authSidecar.enabled  }}
{{- toYaml .Values.authSidecar.annotations | nindent 4 }}
  {{- else }}
    {{- range $k, $v := .Values.ingress.flowerAnnotations }}
      {{ $k | quote }}: {{ tpl $v $ctx | toYaml | indent 4 }}
    {{- end }}
  {{- end }}
  {{- end }}
spec:
  tls:
          {{- if .Values.ingress.acme }}
    - secretName: {{ .Release.Name }}-airflow-tls
          {{- else if .Values.ingress.tlsSecretName }}
    - secretName: {{ .Values.ingress.tlsSecretName }}
          {{- else if .Values.authSidecar.enabled  }}
    - secretName: astronomer-tls
          {{ else }}
    - secretName: ~
            {{- end }}
      hosts:
      {{- if or (eq $purpose "combined") (eq $purpose "primary") }}
        - {{- include "deployments_subdomain" . | indent 1 }}
      {{- end }}
      {{- if or (eq $purpose "combined") (eq $purpose "compat") }}
        - {{- include "flower_subdomain" . | indent 1 }}
      {{- end }}
  rules:
  {{- if or (eq $purpose "combined") (eq $purpose "primary") }}
    - host: {{- include "deployments_subdomain" . | indent 1 }}
      http:
        paths:
          {{- if .Values.authSidecar.enabled  }}
          - path: /{{ .Release.Name }}/flower
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-flower
                port:
                  name: auth-proxy
          {{- else }}
          - path: /{{ .Release.Name }}/flower(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-flower
                port:
                  name: flower-ui
          {{ end }}
  {{- end }}
  {{- if or (eq $purpose "combined") (eq $purpose "compat") }}
    - host: {{- include "flower_subdomain" . | indent 1 }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-flower
                port:
                  {{- if .Values.authSidecar.enabled  }}
                  name: auth-proxy
                  {{- else }}
                  name: flower-ui
                  {{- end }}
  {{- end }}
{{/* end ctx scope-inversion for purpose */}}
{{ end }}
---
{{/* end range iteration loop over purposes */}}
{{ end }}
{{/* end check on if ingress is enabled */}}
{{- end }}
{{/* END FLOWER INGRESS SECTION */}}
{{/* START DAG DEPLOY SERVER INGRESS SECTION */}}
################################
## Dag Deployment Server
#################################
{{- if and .Values.ingress.enabled .Values.dagDeploy.enabled  }}
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-dag-server-ingress
  labels:
    tier: airflow
    component: dag-server-ingress
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
{{- with .Values.airflow.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
  {{- if .Values.ingress.dagServerAnnotations }}
  {{ $ctx := . }}
  annotations:
  {{- if .Values.authSidecar.enabled  }}
{{- toYaml .Values.authSidecar.annotations | nindent 4 }}
  {{- else }}
    {{- range $k, $v := .Values.ingress.dagServerAnnotations }}
      {{ $k | quote }}: {{ tpl $v $ctx | toYaml | indent 4 }}
    {{- end }}
  {{- end }}
  {{- end }}
spec:
  tls:
          {{- if .Values.ingress.acme }}
    - secretName: {{ .Release.Name }}-airflow-tls
          {{- else if .Values.ingress.tlsSecretName }}
    - secretName: {{ .Values.ingress.tlsSecretName }}
          {{- else if .Values.authSidecar.enabled  }}
    - secretName: astronomer-tls
          {{ else }}
    - secretName: ~
            {{- end }}
      hosts:
        - {{- include "deployments_subdomain" . | indent 1 }}
  rules:
    - host: {{- include "deployments_subdomain" . | indent 1 }}
      http:
        paths:
          {{- if .Values.authSidecar.enabled  }}
          - path: /{{ .Release.Name }}/dags
          {{- else }}
          - path: /{{ .Release.Name }}/dags/(upload|download)(/.*)?
          {{- end }}
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-dag-server
                port:
                  {{- if .Values.authSidecar.enabled  }}
                  name: auth-proxy
                  {{- else }}
                  name: http
                  {{- end }}
{{- end }}
