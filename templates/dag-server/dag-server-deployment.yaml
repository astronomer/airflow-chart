###############################
## dag-server Deployment ##
###############################
{{- if .Values.dagServer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-dag-server"
  labels:
    component: dag-server
    tier: airflow
    release: "{{ .Release.Name }}"
    chart: "{{ .Release.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      component: dag-server
      tier: airflow
  template:
    metadata:
      labels:
        component: dag-server
        tier: airflow
        release: {{ .Release.Name }}
        chart: "{{ .Release.Name }}-{{ .Chart.Version }}"
        heritage: "{{ .Release.Service }}"
    spec:
      {{- if or .Values.airflow.registry.secretName .Values.airflow.registry.connection }}
      imagePullSecrets:
        - name: {{ template "astro.registry_secret" . }}
      {{- end }}
      securityContext: {{ toYaml .Values.dagServer.securityContext | nindent 8 }}
      volumes:
        - name: dag-deploy-files
          emptyDir: {}
        - name: {{ .Release.Name }}-dag-server-config
          configMap:
            name: {{ .Release.Name }}-dag-server-config
        {{- if .Values.loggingSidecar.enabled }}
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-sidecar-config
        - emptyDir: {}
          name: sidecar-logging-consumer
        {{- end }}
      containers:
        - name: "dag-server"
          image: "{{ .Values.dagServer.images.dagServer.repository }}:{{ .Values.dagServer.images.dagServer.tag }}"
          {{- if .Values.loggingSidecar.enabled }}
          command: ["sh"]
          args:
            - -c
            - /dagServer.sh 1> >( tee -a /var/log/sidecar-logging-consumer/out.log ) 2> >( tee -a /var/log/sidecar-logging-consumer/err.log >&2 )
          {{- end }}
          volumeMounts:
            - name: dag-deploy-files
              mountPath: /TODO/fix-this-in-the-chart
            {{- if .Values.loggingSidecar.enabled }}
            - mountPath: /var/log/sidecar-logging-consumer
              name: sidecar-logging-consumer
            {{- end }}
          env:
            - name: DAG_SERVER_POD
              value: "true"
          resources: {{- toYaml .Values.dagServer.dagServerResources | nindent 12 }}
          livenessProbe:
            exec:
              command:
              - echo "TODO: fix this in the chart"
            initialDelaySeconds: 5
            periodSeconds: 15
          resources: {{- toYaml .Values.dagServer.gitDaemonResources | nindent 12 }}
        {{- if .Values.loggingSidecar.enabled }}
        - name: vector
          image: "{{ .Values.loggingSidecar.image }}"
          env:
          - name: VECTOR_CONFIG
            value: /etc/sidecar-logging/vector-config.yaml
          - name: SIDECAR_LOGS
            value: /var/log/sidecar-logging-consumer
          - name: COMPONENT
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels['component']
          - name: RELEASE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels['release']
          - name: WORKSPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels['workspace']
          volumeMounts:
          - mountPath: /etc/sidecar-logging
            name: config-volume
          - name: sidecar-logging-consumer
            mountPath: /var/log/sidecar-logging-consumer
            readOnly: False
        {{- end }}

{{- if .Values.dagServer.extraContainers }}
{{- toYaml .Values.dagServer.extraContainers | nindent 8 }}
{{- end }}
{{- end -}}
