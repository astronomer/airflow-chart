################################
## Airflow Flower Deployment
#################################
{{- if eq .Values.executor "CeleryExecutor" }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-flower
  labels:
    tier: airflow
    component: flower
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
{{- with .Values.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
  annotations:
    checksum/airflow-config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: airflow
      component: flower
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        tier: airflow
        component: flower
        release: {{ .Release.Name }}
{{- with .Values.labels }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      restartPolicy: Always
      securityContext:
        runAsUser: {{ .Values.uid }}
      {{- if or .Values.registry.secretName .Values.registry.connection }}
      imagePullSecrets:
        - name: {{ template "registry_secret" . }}
      {{- end }}
      containers:
        {{- if .Values.authSidecar.enabled }}
        - name: auth-proxy
          image: "{{ .Values.authSidecar.repository }}:{{ .Values.authSidecar.tag }}"
          imagePullPolicy: {{ .Values.authSidecar.pullPolicy }}
          ports:
          - containerPort: {{ .Values.authSidecar.port }}
            name: auth-proxy
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.authSidecar.port }}
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 30
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 20
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.authSidecar.port }}
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 30
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 20
          volumeMounts:
          - mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            name: nginx-sidecar-conf
        {{- end }}
        - name: flower
          image: {{ template "default_airflow_image" . }}
          imagePullPolicy: {{ .Values.images.airflow.pullPolicy }}
          {{- if semverCompare ">=2.0.0" .Values.airflowVersion }}
          args: ["airflow", "celery", "flower"]
          {{- else }}
          args: ["airflow", "flower"]
          {{- end }}
          resources:
{{ toYaml .Values.flower.resources | indent 12 }}
          volumeMounts:
            - name: config
              mountPath: {{ template "airflow_config_path" . }}
              subPath: airflow.cfg
              readOnly: true
          ports:
            - name: flower-ui
              containerPort: {{ .Values.ports.flowerUI }}
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /
              port: {{ .Values.ports.flowerUI }}
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /
              port: {{ .Values.ports.flowerUI }}
            initialDelaySeconds: 10
            periodSeconds: 5
          {{- include "airflow_environment_variables" . | indent 10 }}
      volumes:
        - name: config
          configMap:
            name: {{ template "airflow_config" . }}
        {{- if .Values.authSidecar.enabled }}
        - name: nginx-sidecar-conf
          configMap:
            name: {{ .Release.Name }}-flower-nginx-conf
        {{- end }}
{{- end }}
