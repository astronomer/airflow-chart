################################
## Airflow Webserver Deployment
#################################
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-webserver
  labels:
    tier: airflow
    component: webserver
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
{{- with .Values.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.webserver.replicas }}
  strategy:
    {{- if semverCompare ">=2.0.0" .Values.airflowVersion }}
    # Here we define the rolling update strategy
    # - maxSurge define how many pod we can add at a time
    # - maxUnavailable define how many pod can be unavailable
    #   during the rolling update
    # Setting maxUnavailable to 0 would make sure we have the appropriate
    # capacity during the rolling update.
    # You can also use percentage based value instead of integer.
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    {{- else }}
    type: Recreate
    {{- end}}
  selector:
    matchLabels:
      tier: airflow
      component: webserver
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        tier: airflow
        component: webserver
        release: {{ .Release.Name }}
{{- with .Values.labels }}
{{ toYaml . | indent 8 }}
{{- end }}
      annotations:
        checksum/metadata-secret: {{ include (print $.Template.BasePath "/secrets/metadata-connection-secret.yaml") . | sha256sum }}
        checksum/pgbouncer-config-secret: {{ include (print $.Template.BasePath "/secrets/pgbouncer-config-secret.yaml") . | sha256sum }}
        checksum/airflow-config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.airflowPodAnnotations }}
        {{- toYaml .Values.airflowPodAnnotations | nindent 8 }}
        {{- end }}
    spec:
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      restartPolicy: Always
      serviceAccountName: {{ .Release.Name }}-webserver-serviceaccount
      securityContext:
        runAsUser: {{ .Values.uid }}
      {{- if or .Values.registry.secretName .Values.registry.connection }}
      imagePullSecrets:
        - name: {{ template "registry_secret" . }}
      {{- end }}
      initContainers:
        - name: wait-for-airflow-migrations
          image: {{ template "default_airflow_image" . }}
          imagePullPolicy: {{ .Values.images.airflow.pullPolicy }}
          args: ["airflow-migration-spinner", "--timeout=60"]
          env:
          {{- include "standard_airflow_environment" . | indent 10 }}
      containers:
        {{- if .Values.sidecar.enabled }}
        - name: nginx
          image: {{ .Values.sidecar.image }}
          imagePullPolicy: Always
          ports:
          - containerPort: 8084
            name: nginx-ui
            protocol: TCP
          volumeMounts:
          - mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            name: nginx-sidecar-conf
        {{- end }}
        - name: webserver
          image: {{ template "airflow_image" . }}
          imagePullPolicy: {{ .Values.images.airflow.pullPolicy }}
          args: ["airflow", "webserver"]
          resources:
{{ toYaml .Values.webserver.resources | indent 12 }}
          volumeMounts:
            - name: config
              mountPath: {{ template "airflow_config_path" . }}
              subPath: airflow.cfg
              readOnly: true
            - name: config
              mountPath: {{ template "airflow_webserver_config_path" . }}
              subPath: webserver_config.py
              readOnly: true
            - name: config
              mountPath: {{ template "airflow_local_setting_path" . }}
              subPath: airflow_local_settings.py
              readOnly: true
{{- if .Values.webserver.jwtSigningCertificateSecretName }}
            - name: signing-certificate
              mountPath: {{ template "airflow_webserver_jwt_cert_dir" . }}
              readOnly: true
{{- end }}
{{- if .Values.webserver.extraVolumeMounts }}
{{ toYaml .Values.webserver.extraVolumeMounts | indent 12 }}
{{- end }}
          ports:
            - name: webserver-ui
              containerPort: {{ .Values.ports.airflowUI }}
          livenessProbe:
            httpGet:
{{- if .Values.ingress.enabled }}
              path: {{ printf "/%s/airflow/health" .Release.Name }}
{{- else }}
              path: /health
{{- end }}
              port: {{ .Values.ports.airflowUI }}
            initialDelaySeconds: {{ .Values.webserver.livenessProbe.initialDelaySeconds | default 15 }}
            timeoutSeconds: {{ .Values.webserver.livenessProbe.timeoutSeconds | default 30 }}
            failureThreshold: {{ .Values.webserver.livenessProbe.failureThreshold | default 20 }}
            periodSeconds: {{ .Values.webserver.livenessProbe.periodSeconds | default 5 }}
          readinessProbe:
            httpGet:
{{- if .Values.ingress.enabled }}
              path: {{ printf "/%s/airflow/health" .Release.Name }}
{{- else }}
              path: /health
{{- end }}
              port: {{ .Values.ports.airflowUI }}
            initialDelaySeconds: {{ .Values.webserver.readinessProbe.initialDelaySeconds | default 15 }}
            timeoutSeconds: {{ .Values.webserver.readinessProbe.timeoutSeconds | default 30 }}
            failureThreshold: {{ .Values.webserver.readinessProbe.failureThreshold | default 20 }}
            periodSeconds: {{ .Values.webserver.readinessProbe.periodSeconds | default 5 }}
          {{- include "airflow_environment_variables" . | indent 10 }}
{{- if .Values.webserver.extraContainers }}
{{- toYaml .Values.webserver.extraContainers | nindent 8 }}
{{- end }}
      volumes:
        {{- if .Values.sidecar.enabled }}
        - name: nginx-sidecar-conf
          configMap:
            name: {{ .Release.Name }}-nginx-conf
        {{- end }}
        - name: config
          configMap:
            name: {{ template "airflow_config" . }}
{{- if .Values.webserver.jwtSigningCertificateSecretName }}
        - name: signing-certificate
          secret:
            secretName: {{ .Values.webserver.jwtSigningCertificateSecretName }}
{{- end }}
{{- if .Values.webserver.extraVolumes }}
{{ toYaml .Values.webserver.extraVolumes | indent 8 }}
{{- end }}

