################################
## Airflow Cleanup Task Metadata CronJob
#################################
{{- if .Values.cleanupTaskDataCronjob.enabled }}
{{- $securityContext := include "airflowSecurityContext" (list . .Values.cleanup) }}
{{- if semverCompare ">= 1.21.x" (include "kubeVersion" .) }}
apiVersion: batch/v1
{{- else }}
apiVersion: batch/v1beta1
{{- end }}
kind: CronJob
metadata:
  name: {{ .Release.Name }}-cleanup-task-metadata
  labels:
    tier: airflow
    component: airflow-cleanup-task-metadata
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- with .Values.labels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  schedule: "{{ .Values.cleanupTaskDataCronjob.schedule }}"
  # The cron job does not allow concurrent runs; if it is time for a new job run and the previous job run hasn't finished yet, the cron job skips the new job run
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        metadata:
          labels:
            tier: airflow
            component: airflow-cleanup-task-metadata
            release: {{ .Release.Name }}
        spec:
          restartPolicy: Never
          serviceAccountName: {{ .Release.Name }}-cleanup-task-metadata
          {{- if or .Values.airflow.registry.secretName .Values.airflow.registry.connection }}
          imagePullSecrets:
            - name: {{ template "registry_secret" . }}
          {{- end }}
          securityContext: {{ $securityContext | nindent 12 }}
          containers:
            - name: airflow-cleanup-task-metadata
              image: {{ template "airflow_image" . }}
              imagePullPolicy: {{ .Values.images.airflow.pullPolicy }}
              {{- if .Values.cleanupTaskDataCronjob.args }}
              args: {{ tpl (toYaml .Values.cleanupTaskDataCronjob.args) . | nindent 16 }}
              {{- end }}
              env:
              {{- include "standard_airflow_environment" . | indent 12 }}
              volumeMounts:
                - name: config
                  mountPath: {{ template "airflow_config_path" . }}
                  subPath: airflow.cfg
                  readOnly: true
              resources:
{{ toYaml .Values.cleanupTaskDataCronjob.resources | indent 16 }}
          volumes:
            - name: config
              configMap:
                name: {{ template "airflow_config" . }}
{{- end }}
